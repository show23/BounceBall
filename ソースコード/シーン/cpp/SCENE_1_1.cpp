

//ヘッダー定義
#include "TEST_SCENE.h"
#include "main.h"
#include "input.h"
#include "sound.h"
#include "Background.h"
#include "Scroll.h"

#include "Player.h"
#include "Ball.h"

/*--------------------------------------
    追加ヘッダー定義(忘れないでね)
 -------------------------------------*/
#include "Wall.h"
#include "BreakableWall.h"
#include "Slowboundwall.h"
#include "SlowField.h"
#include "Bumper.h"
#include "Wind.h"
#include "WarpBox.h"
#include "SwitchWall.h"
#include "AccelerationBlock.h"
#include "enemy.h"
#include "Goal.h"



void SetSCENE_1_1() {
    ////プレイヤー召喚
    setPlayer(D3DXVECTOR2(150, 600), D3DXVECTOR2(0, 0));
    ////ボール
    setBall(D3DXVECTOR2(200, 550), D3DXVECTOR2(0, 0));

    //基本ブロック
    setWall(D3DXVECTOR2(0, 669), D3DXVECTOR2(7287, 60), 0);
    setWall(D3DXVECTOR2(0, 0), D3DXVECTOR2(7287, 60), 0);
    setWall(D3DXVECTOR2(0, 0), D3DXVECTOR2(60, 720), 0);
    setWall(D3DXVECTOR2(7227, 0), D3DXVECTOR2(60, 720), 0);


    //    setStar(D3DXVECTOR2(1280, 370), D3DXVECTOR2(64, 64));

    setWall(D3DXVECTOR2(600, 60), D3DXVECTOR2(700, 390), 0);

    setWall_B(D3DXVECTOR2(700, 450), D3DXVECTOR2(110, 110), 40);
    setWall_B(D3DXVECTOR2(700, 560), D3DXVECTOR2(110, 110), 40);

    setWall_B(D3DXVECTOR2(900, 450), D3DXVECTOR2(110, 110), 40);
    setWall_B(D3DXVECTOR2(900, 560), D3DXVECTOR2(110, 110), 40);

    setWall_B(D3DXVECTOR2(1100, 450), D3DXVECTOR2(110, 110), 40);
    setWall_B(D3DXVECTOR2(1100, 560), D3DXVECTOR2(110, 110), 40);

    setWall(D3DXVECTOR2(1600, 560), D3DXVECTOR2(500, 110), 0);

    setWall_B(D3DXVECTOR2(1800, 60), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(1800, 60 + 100), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(1800, 60 + 200), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(1800, 60 + 300), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(1800, 60 + 400), D3DXVECTOR2(100, 100), 40);

    setWall_B(D3DXVECTOR2(1700, 60), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(1700, 60 + 100), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(1700, 60 + 200), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(1700, 60 + 300), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(1700, 60 + 400), D3DXVECTOR2(100, 100), 40);

    setWall(D3DXVECTOR2(2400, 60), D3DXVECTOR2(1200, 110), 0);

    setWall_B(D3DXVECTOR2(2500, 170), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(2500, 170 + 100), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(2500, 170 + 200), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(2500, 170 + 300), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(2500, 170 + 400), D3DXVECTOR2(100, 100), 40);

    setWall_B(D3DXVECTOR2(2600, 170), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(2600, 170 + 100), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(2600, 170 + 200), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(2600, 170 + 300), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(2600, 170 + 400), D3DXVECTOR2(100, 100), 40);

    setWall(D3DXVECTOR2(3000, 570), D3DXVECTOR2(2000, 100), 0);

    setWall_B(D3DXVECTOR2(3100, 170), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(3100, 170 + 100), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(3100, 170 + 200), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(3100, 170 + 300), D3DXVECTOR2(100, 100), 40);

    setWall_B(D3DXVECTOR2(3200, 170), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(3200, 170 + 100), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(3200, 170 + 200), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(3200, 170 + 300), D3DXVECTOR2(100, 100), 40);

    setWall_B(D3DXVECTOR2(3300, 170), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(3300, 170 + 100), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(3300, 170 + 200), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(3300, 170 + 300), D3DXVECTOR2(100, 100), 40);

    setWall(D3DXVECTOR2(3600, 60), D3DXVECTOR2(1900, 210), 0);

    setWall_B(D3DXVECTOR2(4000, 270), D3DXVECTOR2(150, 300), 100);
    setWall_B(D3DXVECTOR2(4200, 270), D3DXVECTOR2(150, 300), 100);
    setWall_B(D3DXVECTOR2(4400, 270), D3DXVECTOR2(150, 300), 100);


    setWall(D3DXVECTOR2(5400, 270), D3DXVECTOR2(100, 200), 0);
    setWall(D3DXVECTOR2(5500, 420), D3DXVECTOR2(300, 50), 0);
    setWall(D3DXVECTOR2(6000, 270), D3DXVECTOR2(100, 400), 0);
    setWall(D3DXVECTOR2(6300, 60), D3DXVECTOR2(100, 400), 0);

    setWall_B(D3DXVECTOR2(5500, 470), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(5500, 570), D3DXVECTOR2(100, 100), 40);

    setWall_B(D3DXVECTOR2(5600, 470), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(5600, 570), D3DXVECTOR2(100, 100), 40);

    setWall_B(D3DXVECTOR2(5700, 470), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(5700, 570), D3DXVECTOR2(100, 100), 40);

    setWall_B(D3DXVECTOR2(5800, 60), D3DXVECTOR2(100, 105), 40);
    setWall_B(D3DXVECTOR2(5800, 165), D3DXVECTOR2(100, 105), 40);
    setWall_B(D3DXVECTOR2(5900, 60), D3DXVECTOR2(100, 105), 40);
    setWall_B(D3DXVECTOR2(5900, 165), D3DXVECTOR2(100, 105), 40);

    setWall_B(D3DXVECTOR2(5800, 270), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(5800, 370), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(5900, 270), D3DXVECTOR2(100, 100), 40);
    setWall_B(D3DXVECTOR2(5900, 370), D3DXVECTOR2(100, 100), 40);

    setWall_B(D3DXVECTOR2(6000, 65), D3DXVECTOR2(100, 105), 40);
    setWall_B(D3DXVECTOR2(6000, 165), D3DXVECTOR2(100, 105), 40);
    setWall_B(D3DXVECTOR2(6100, 65), D3DXVECTOR2(100, 105), 40);
    setWall_B(D3DXVECTOR2(6100, 165), D3DXVECTOR2(100, 105), 40);
    setWall_B(D3DXVECTOR2(6200, 65), D3DXVECTOR2(100, 105), 40);
    setWall_B(D3DXVECTOR2(6200, 165), D3DXVECTOR2(100, 105), 40);


    setGoal(D3DXVECTOR2(6480, 580), D3DXVECTOR2(150, 128), 1);



}