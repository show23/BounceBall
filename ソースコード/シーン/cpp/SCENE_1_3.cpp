

//ヘッダー定義
#include "TEST_SCENE.h"
#include "main.h"
#include "input.h"
#include "sound.h"
#include "Background.h"
#include "Scroll.h"

#include "Player.h"
#include "Ball.h"

/*--------------------------------------
    追加ヘッダー定義(忘れないでね)
 -------------------------------------*/
#include "Wall.h"
#include "BreakableWall.h"
#include "Slowboundwall.h"
#include "SlowField.h"
#include "Bumper.h"
#include "Wind.h"
#include "WarpBox.h"
#include "SwitchWall.h"
#include "AccelerationBlock.h"
#include "enemy.h"
#include "Goal.h"



void SetSCENE_1_3() {
    ////プレイヤー召喚
    setPlayer(D3DXVECTOR2(150, 600), D3DXVECTOR2(0, 0));
    ////ボール
    setBall(D3DXVECTOR2(200, 550), D3DXVECTOR2(0, 0));

    //基本ブロック
    setWall(D3DXVECTOR2(0, 669), D3DXVECTOR2(7287, 60), 0);
    setWall(D3DXVECTOR2(0, 0), D3DXVECTOR2(7287, 60), 0);
    setWall(D3DXVECTOR2(0, 0), D3DXVECTOR2(60, 720), 0);
    setWall(D3DXVECTOR2(7227, 0), D3DXVECTOR2(60, 720), 0);

    setSlowboundwall(D3DXVECTOR2(1100, 60), D3DXVECTOR2(150, 150), 0.15f);
    setSlowboundwall(D3DXVECTOR2(1100, 210), D3DXVECTOR2(150, 150), 0.15f);
    setSlowboundwall(D3DXVECTOR2(1100, 360), D3DXVECTOR2(150, 150), 0.15f);

    setEnemy_B(D3DXVECTOR2(1225, 550), D3DXVECTOR2(128, 128), D3DXVECTOR2(2, 0), 20, 60);

    setSlowboundwall(D3DXVECTOR2(1250, 60), D3DXVECTOR2(150, 150), 0.15f);
    setSlowboundwall(D3DXVECTOR2(1250, 210), D3DXVECTOR2(150, 150), 0.15f);
    setSlowboundwall(D3DXVECTOR2(1250, 360), D3DXVECTOR2(150, 150), 0.15f);

    setEnemy_B(D3DXVECTOR2(1550, 150), D3DXVECTOR2(128, 128), D3DXVECTOR2(0, 4), 20, 60);
    setEnemy_B(D3DXVECTOR2(1850, 150), D3DXVECTOR2(128, 128), D3DXVECTOR2(0, 3), 20, 60);

    setSlowboundwall(D3DXVECTOR2(1700, 510), D3DXVECTOR2(150, 160), 0.15f);

    setWall(D3DXVECTOR2(1850, 510), D3DXVECTOR2(600, 160), 0);

    setWall_B(D3DXVECTOR2(2000, 60), D3DXVECTOR2(150, 150), 40);
    setWall_B(D3DXVECTOR2(2000, 210), D3DXVECTOR2(150, 150), 40);
    setWall_B(D3DXVECTOR2(2000, 360), D3DXVECTOR2(150, 150), 40);
    setWall_B(D3DXVECTOR2(2150, 60), D3DXVECTOR2(150, 150), 40);
    setWall_B(D3DXVECTOR2(2150, 210), D3DXVECTOR2(150, 150), 40);
    setWall_B(D3DXVECTOR2(2150, 360), D3DXVECTOR2(150, 150), 40);


    setEnemy_B(D3DXVECTOR2(2550, 150), D3DXVECTOR2(128, 128), D3DXVECTOR2(0, 4), 20, 60);
    setEnemy_B(D3DXVECTOR2(2750, 150), D3DXVECTOR2(128, 128), D3DXVECTOR2(0, 4), 20, 60);

    setSlowboundwall(D3DXVECTOR2(2850, 60), D3DXVECTOR2(150, 150), 0.15f);
    setSlowboundwall(D3DXVECTOR2(2850, 210), D3DXVECTOR2(150, 150), 0.15f);

    setWall_B(D3DXVECTOR2(2850, 360), D3DXVECTOR2(150, 150), 40);
    setWall_B(D3DXVECTOR2(2850, 510), D3DXVECTOR2(150, 160), 40);

    setEnemy_B(D3DXVECTOR2(3100, 150), D3DXVECTOR2(128, 128), D3DXVECTOR2(0, 4), 20, 60);

    setSlowboundwall(D3DXVECTOR2(3200, 60), D3DXVECTOR2(150, 150), 0.15f);
    setWall(D3DXVECTOR2(3200, 510), D3DXVECTOR2(150, 160), 0);

    setWall_B(D3DXVECTOR2(3200, 210), D3DXVECTOR2(150, 150), 40);
    setWall_B(D3DXVECTOR2(3200, 360), D3DXVECTOR2(150, 150), 40);

    setEnemy_B(D3DXVECTOR2(3450, 150), D3DXVECTOR2(128, 128), D3DXVECTOR2(0, 4), 20, 60);

    setSlowboundwall(D3DXVECTOR2(3550, 60), D3DXVECTOR2(150, 150), 0.15f);
    setSlowboundwall(D3DXVECTOR2(3550, 210), D3DXVECTOR2(150, 150), 0.15f);

    setWall_B(D3DXVECTOR2(3550, 360), D3DXVECTOR2(150, 150), 40);
    setWall_B(D3DXVECTOR2(3550, 510), D3DXVECTOR2(150, 160), 40);

    setEnemy_B(D3DXVECTOR2(3850, 150), D3DXVECTOR2(128, 128), D3DXVECTOR2(0, 4), 20, 60);

    setWall(D3DXVECTOR2(4000, 510), D3DXVECTOR2(170, 160), 0);
    setWall(D3DXVECTOR2(4260, 510), D3DXVECTOR2(400, 160), 0);
    setWall(D3DXVECTOR2(4010, 600), D3DXVECTOR2(960, 70), 0);
    setWall(D3DXVECTOR2(4750, 510), D3DXVECTOR2(220, 160), 0);


    setWall(D3DXVECTOR2(4090, 60), D3DXVECTOR2(350, 150), 0);
    setWall(D3DXVECTOR2(4530, 60), D3DXVECTOR2(350, 150), 0);
    setWall(D3DXVECTOR2(4000, 60), D3DXVECTOR2(970, 60), 0);


    setSlowboundwall(D3DXVECTOR2(4000, 120), D3DXVECTOR2(90, 90), 0.15f);
    setSlowboundwall(D3DXVECTOR2(4440, 120), D3DXVECTOR2(90, 90), 0.15f);
    setSlowboundwall(D3DXVECTOR2(4880, 120), D3DXVECTOR2(90, 90), 0.15f);

    setSlowboundwall(D3DXVECTOR2(4170, 510), D3DXVECTOR2(90, 90), 0.15f);
    setSlowboundwall(D3DXVECTOR2(4660, 510), D3DXVECTOR2(90, 90), 0.15f);

    setWall_B(D3DXVECTOR2(4150, 210), D3DXVECTOR2(150, 150), 0);
    setWall_B(D3DXVECTOR2(4150, 360), D3DXVECTOR2(150, 150), 0);
    setWall_B(D3DXVECTOR2(4300, 210), D3DXVECTOR2(150, 150), 0);
    setWall_B(D3DXVECTOR2(4300, 360), D3DXVECTOR2(150, 150), 0);
    setWall_B(D3DXVECTOR2(4450, 210), D3DXVECTOR2(150, 150), 0);
    setWall_B(D3DXVECTOR2(4450, 360), D3DXVECTOR2(150, 150), 0);
    setWall_B(D3DXVECTOR2(4600, 210), D3DXVECTOR2(150, 150), 0);
    setWall_B(D3DXVECTOR2(4600, 360), D3DXVECTOR2(150, 150), 0);
    setWall_B(D3DXVECTOR2(4750, 210), D3DXVECTOR2(150, 150), 0);
    setWall_B(D3DXVECTOR2(4750, 360), D3DXVECTOR2(150, 150), 0);

    setEnemy_B(D3DXVECTOR2(5150, 150), D3DXVECTOR2(128, 128), D3DXVECTOR2(0, 4), 20, 60);

    setSlowboundwall(D3DXVECTOR2(5400, 60), D3DXVECTOR2(100, 100), 0.15f);
    setWall_B(D3DXVECTOR2(5300, 60), D3DXVECTOR2(100, 100), 0);
    setWall_B(D3DXVECTOR2(5300, 160), D3DXVECTOR2(100, 100), 0);
    setWall_B(D3DXVECTOR2(5300, 260), D3DXVECTOR2(100, 100), 0);
    setWall_B(D3DXVECTOR2(5300, 360), D3DXVECTOR2(100, 100), 0);
    setWall_B(D3DXVECTOR2(5300, 460), D3DXVECTOR2(100, 100), 0);
    setWall_B(D3DXVECTOR2(5300, 560), D3DXVECTOR2(100, 100), 0);

    setEnemy_B(D3DXVECTOR2(5650, 150), D3DXVECTOR2(128, 128), D3DXVECTOR2(0, 4), 20, 60);
    setEnemy_B(D3DXVECTOR2(5850, 150), D3DXVECTOR2(128, 128), D3DXVECTOR2(0, 4), 20, 60);

    setSlowboundwall(D3DXVECTOR2(6000, 60), D3DXVECTOR2(150, 150), 0.15f);
    setSlowboundwall(D3DXVECTOR2(6000, 210), D3DXVECTOR2(150, 150), 0.15f);
    setSlowboundwall(D3DXVECTOR2(6000, 510), D3DXVECTOR2(150, 160), 0.15f);
    setWall_B(D3DXVECTOR2(6000, 360), D3DXVECTOR2(150, 150), 0);

    setEnemy_B(D3DXVECTOR2(6200, 550), D3DXVECTOR2(128, 128), D3DXVECTOR2(4, 0), 20, 120);
    setEnemy_B(D3DXVECTOR2(6200, 100), D3DXVECTOR2(128, 128), D3DXVECTOR2(4, 0), 20, 120);
    setEnemy_B(D3DXVECTOR2(6200, 100), D3DXVECTOR2(128, 128), D3DXVECTOR2(0, 4), 20, 120);
    setEnemy_B(D3DXVECTOR2(6550, 100), D3DXVECTOR2(128, 128), D3DXVECTOR2(0, 4), 20, 120);



    setGoal(D3DXVECTOR2(6880, 580), D3DXVECTOR2(150, 128), 1);


}